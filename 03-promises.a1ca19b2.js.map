{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAEgBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,cAAcC,SAKpD,IAAIC,EAAaC,OAAON,EAAMO,OAE1BC,EAAc,EACdC,EAAW,EAEf,MAAMC,EAAaC,aAAY,KAsBjC,IAAuBC,EAAUb,EArBzBS,IAAgBF,OAAOJ,EAAOK,QAIlCC,GAAe,EACfC,GAAY,GAgBOG,EAfLH,EAeeV,EAfLM,EAgBnB,IAAIQ,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACF,E,MAAUb,IAEnBgB,EAAO,C,SAACH,E,MAAUb,GAAO,GAE1BA,EAAM,KAvBNoB,MAAK,EAACP,SAAEA,EAAQb,MAAEA,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBV,QAAiBb,MAAU,IAGnDwB,OAAM,EAACX,SAAEA,EAAQb,MAAEA,MAClBqB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBZ,QAAeb,MAAU,IAGnDM,GAAcC,OAAOL,EAAKM,QAhBxBkB,cAAcf,EAgBgB,GAC/B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport flatpickr from 'flatpickr';\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  // if (!delay.value || !step.value || !amount.value) {\n  //   return Notiflix.Notify.info('Fill in all fields');\n  // }\n  \n  let delayInput = Number(delay.value);\n\n  let amountValue = 0;\n  let position = 0;\n\n  const intervalId = setInterval(() => {\n    if (amountValue === Number(amount.value)) {\n      clearInterval(intervalId);\n      return;\n    }\n    amountValue += 1;\n    position += 1;\n    createPromise(position, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayInput += Number(step.value);\n  }, 0);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","delay1","step","amount","currentTarget","elements","delayInput","Number","value","amountValue","position1","intervalId","setInterval","position","Promise","resolve","reject","setTimeout","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.a1ca19b2.js.map"}