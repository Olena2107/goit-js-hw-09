{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,aAGAC,EAAAC,GAASC,OAAOC,KAAK,CACnBC,MAAO,QACPC,cAAc,EACdC,cAAc,EACdC,SAAU,SAEZ,MAAMC,EAAWC,SAASC,cAAc,gBAClCC,EAASF,SAASC,cAAc,eAChCE,EAAUH,SAASC,cAAc,gBACjCG,EAAYJ,SAASC,cAAc,kBACnCI,EAAYL,SAASC,cAAc,kBACzCF,EAASO,UAAW,EACpB,IAAIC,EAAe,KAEnB,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACFA,EAAc,GAAKH,KAAKI,MAAQ,GAClCzB,EAAAC,GAASC,OAAOwB,QAAQ,sCAEtBF,EAAc,GAAKH,KAAKI,MAAQ,IAClCjB,EAASO,UAAW,EACpBC,EAAeQ,EAAc,G,IAI7BN,WAAES,EAAUR,UAAES,EAASR,YAAES,EAAWP,gBAAEQ,EAAeP,QAAEQ,GAC3Dd,EAUIe,IARkB,EAAAlC,EAAAmC,SAAU,mBAAoB,C,WACpDN,E,UACAC,E,YACAC,E,gBACAC,E,QACAC,IAGY,CACZG,WAAY,KACZC,UAAS,IACAnB,EAAeK,KAAKI,MAE7BW,aACE5B,EAASO,UAAW,EACpBsB,KAAKH,WAAaI,aAAY,KAC5B,MAAMH,EAAYE,KAAKF,YACnBA,GAAa,MACfE,KAAKE,YACLvC,EAAAC,GAASC,OAAOsC,QAAQ,qBAAsB,CAC5CC,SAAU,gBACVC,QAAS,IACTnC,SAAU,UAGd,MAAMoC,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAmBpC,SAAmBC,GAEjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNP,EAAOS,EAAeC,KAAKC,MAAMP,EAAKI,IAEtCP,EAAQQ,EAAeC,KAAKC,MAAMP,EAAMI,EAAOD,IAE/CL,EAAUO,EAAeC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,IAE1DH,EAAUM,EACdC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,IAG9C,MAAO,C,KAAEL,E,MAAMC,E,QAAOC,E,QAASC,E,CArCeS,CAAUpB,GAEpDxB,EAAO6C,YAAcb,EACrB/B,EAAQ4C,YAAcZ,EACtB/B,EAAU2C,YAAcX,EACxB/B,EAAU0C,YAAcV,CAAO,GAC9B,I,EAELP,YACEkB,cAAcpB,KAAKH,W,IAMvB,SAASkB,EAAeM,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,CAHtCpD,EAASqD,iBAAiB,QAAS7B,EAAMI,WAAW0B,KAAK9B","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport Notiflix from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\nNotiflix.Notify.init({\n  width: '320px',\n  clickToClose: true,\n  pauseOnHover: true,\n  fontSize: '14px',\n});\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nstartBtn.disabled = true;\nlet selectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] - Date.now() < 0) {\n      Notiflix.Notify.failure('Please choose a date in the future');\n    }\n    if (selectedDates[0] - Date.now() > 0) {\n      startBtn.disabled = false;\n      selectedDate = selectedDates[0];\n    }\n  },\n};\nconst { enableTime, time_24hr, defaultDate, minuteIncrement, onClose } =\n  options;\n\nconst flatpickrResult = flatpickr('#datetime-picker', {\n  enableTime,\n  time_24hr,\n  defaultDate,\n  minuteIncrement,\n  onClose,\n});\n\nconst timer = {\n  intervalId: null,\n  deltaTime() {\n    return selectedDate - Date.now();\n  },\n  startTimer() {\n    startBtn.disabled = true;\n    this.intervalId = setInterval(() => {\n      const deltaTime = this.deltaTime();\n      if (deltaTime <= 1000) {\n        this.stopTimer();\n        Notiflix.Notify.success('That time has come', {\n          position: 'center-center',\n          timeout: 6000,\n          fontSize: '20px',\n        });\n      }\n      const { days, hours, minutes, seconds } = convertMs(deltaTime);\n\n      daysEl.textContent = days;\n      hoursEl.textContent = hours;\n      minutesEl.textContent = minutes;\n      secondsEl.textContent = seconds;\n    }, 1000);\n  },\n  stopTimer() {\n    clearInterval(this.intervalId);\n  },\n};\n\nstartBtn.addEventListener('click', timer.startTimer.bind(timer));\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}"],"names":["$fbklV","parcelRequire","$parcel$interopDefault","$7Y9D8","Notify","init","width","clickToClose","pauseOnHover","fontSize","$40d383fb392a7037$var$startBtn","document","querySelector","$40d383fb392a7037$var$daysEl","$40d383fb392a7037$var$hoursEl","$40d383fb392a7037$var$minutesEl","$40d383fb392a7037$var$secondsEl","disabled","$40d383fb392a7037$var$selectedDate","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","now","failure","$40d383fb392a7037$var$enableTime","$40d383fb392a7037$var$time_24hr","$40d383fb392a7037$var$defaultDate","$40d383fb392a7037$var$minuteIncrement","$40d383fb392a7037$var$onClose","$40d383fb392a7037$var$timer","default","intervalId","deltaTime","startTimer","this","setInterval","stopTimer","success","position","timeout","days","hours","minutes","seconds","ms","second","minute","hour","day","$40d383fb392a7037$var$addLeadingZero","Math","floor","$40d383fb392a7037$var$convertMs","textContent","clearInterval","value","toString","padStart","addEventListener","bind"],"version":3,"file":"02-timer.2838d7a3.js.map"}