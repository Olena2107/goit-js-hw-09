{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAGAC,EAAAC,GAASC,OAAOC,KAAK,CACnBC,MAAO,QACPC,cAAc,EACdC,cAAc,EACdC,SAAU,SAEZ,IAAMC,EAAWC,SAASC,cAAc,gBAClCC,EAASF,SAASC,cAAc,eAChCE,EAAUH,SAASC,cAAc,gBACjCG,EAAYJ,SAASC,cAAc,kBACnCI,EAAYL,SAASC,cAAc,kBACzCF,EAASO,UAAW,EACpB,IAAIC,EAAe,KAEbC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACFA,EAAc,GAAKH,KAAKI,MAAQ,GAClCzB,EAAAC,GAASC,OAAOwB,QAAQ,sCAEtBF,EAAc,GAAKH,KAAKI,MAAQ,IAClCjB,EAASO,UAAW,EACpBC,EAAeQ,EAAc,G,GAI3BG,EACNV,EADMC,WAAYU,EAClBX,EADkBE,UAAWU,EAC7BZ,EAD6BG,YAAaU,EAC1Cb,EAD0CK,gBAAiBS,EAC3Dd,EAD2DM,QAWvDS,IARkB,EAAAlC,EAAAmC,SAAU,mBAAoB,CACpDf,WAAAS,EACAR,UAAAS,EACAR,YAAAS,EACAP,gBAAAQ,EACAP,QAAAQ,IAGY,CACZG,WAAY,KACZC,UAAA,WACE,OAAOnB,EAAeK,KAAKI,K,EAE7BW,WAAA,W,WACE5B,EAASO,UAAW,EACpBsB,KAAKH,WAAaI,aAAY,WAC5B,IAAMH,EAAYI,EAAKJ,YACnBA,GAAa,MACfI,EAAKC,YACLxC,EAAAC,GAASC,OAAOuC,QAAQ,qBAAsB,CAC5CC,SAAU,gBACVC,QAAS,IACTpC,SAAU,UAGd,IAA0CqC,EAmBhD,SAAmBC,GAEjB,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOC,EAAeC,KAAKC,MAAMR,EAAKI,IAEtCK,EAAQH,EAAeC,KAAKC,MAAMR,EAAMI,EAAOD,IAE/CO,EAAUJ,EAAeC,KAAKC,MAAMR,EAAOI,EAAOD,EAAQD,IAE1DS,EAAUL,EACdC,KAAKC,MAAMR,EAAQI,EAAOD,EAAQD,EAAUD,IAG9C,MAAO,CAAEI,OAAMI,QAAOC,UAASC,U,CArCeC,CAAUtB,GAA5Ce,EAAkCN,EAAlCM,KAAMI,EAA4BV,EAA5BU,MAAOC,EAAqBX,EAArBW,QAASC,EAAYZ,EAAZY,QAE9B7C,EAAO+C,YAAcR,EACrBtC,EAAQ8C,YAAcJ,EACtBzC,EAAU6C,YAAcH,EACxBzC,EAAU4C,YAAcF,C,GACvB,I,EAELhB,UAAA,WACEmB,cAActB,KAAKH,W,IAMvB,SAASiB,EAAeS,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,CAHtCtD,EAASuD,iBAAiB,QAAS/B,EAAMI,WAAW4B,KAAKhC,G","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport Notiflix from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\nNotiflix.Notify.init({\n  width: '320px',\n  clickToClose: true,\n  pauseOnHover: true,\n  fontSize: '14px',\n});\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nstartBtn.disabled = true;\nlet selectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] - Date.now() < 0) {\n      Notiflix.Notify.failure('Please choose a date in the future');\n    }\n    if (selectedDates[0] - Date.now() > 0) {\n      startBtn.disabled = false;\n      selectedDate = selectedDates[0];\n    }\n  },\n};\nconst { enableTime, time_24hr, defaultDate, minuteIncrement, onClose } =\n  options;\n\nconst flatpickrResult = flatpickr('#datetime-picker', {\n  enableTime,\n  time_24hr,\n  defaultDate,\n  minuteIncrement,\n  onClose,\n});\n\nconst timer = {\n  intervalId: null,\n  deltaTime() {\n    return selectedDate - Date.now();\n  },\n  startTimer() {\n    startBtn.disabled = true;\n    this.intervalId = setInterval(() => {\n      const deltaTime = this.deltaTime();\n      if (deltaTime <= 1000) {\n        this.stopTimer();\n        Notiflix.Notify.success('That time has come', {\n          position: 'center-center',\n          timeout: 6000,\n          fontSize: '20px',\n        });\n      }\n      const { days, hours, minutes, seconds } = convertMs(deltaTime);\n\n      daysEl.textContent = days;\n      hoursEl.textContent = hours;\n      minutesEl.textContent = minutes;\n      secondsEl.textContent = seconds;\n    }, 1000);\n  },\n  stopTimer() {\n    clearInterval(this.intervalId);\n  },\n};\n\nstartBtn.addEventListener('click', timer.startTimer.bind(timer));\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}"],"names":["$dbdyf","parcelRequire","$parcel$interopDefault","$6JpON","Notify","init","width","clickToClose","pauseOnHover","fontSize","$84b9dae4df53835d$var$startBtn","document","querySelector","$84b9dae4df53835d$var$daysEl","$84b9dae4df53835d$var$hoursEl","$84b9dae4df53835d$var$minutesEl","$84b9dae4df53835d$var$secondsEl","disabled","$84b9dae4df53835d$var$selectedDate","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","now","failure","$84b9dae4df53835d$var$enableTime","$84b9dae4df53835d$var$time_24hr","$84b9dae4df53835d$var$defaultDate","$84b9dae4df53835d$var$minuteIncrement","$84b9dae4df53835d$var$onClose","$84b9dae4df53835d$var$timer","default","intervalId","deltaTime","startTimer","this","setInterval","_this","stopTimer","success","position","timeout","ref","ms","second","minute","hour","day","days","$84b9dae4df53835d$var$addLeadingZero","Math","floor","hours","minutes","seconds","$84b9dae4df53835d$var$convertMs","textContent","clearInterval","value","toString","padStart","addEventListener","bind"],"version":3,"file":"02-timer.ba32f1fc.js.map"}